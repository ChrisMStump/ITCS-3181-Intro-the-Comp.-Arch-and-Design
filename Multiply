#CHRISTOPHER STUMP
#TRUONG PHAM
#4/8/2017
#Monday/Wednesday 2PM 3181

#This program prints out the contents of two registers after performing
#multiplication on two binary numbers.
#This program uses recursion of and, add and shift to calculate the results.
.data

           getA:    .asciiz "Please enter the first number: "
           getB:    .asciiz "Please enter the second number: "

          space:    .asciiz " "

         result:    .asciiz "The product: "

.text

main:
    #Prompt for the first number (A)
    li  $v0,4
    la  $a0,getA
    syscall

    #Read in first number.
    li  $v0,5
    syscall
    move    $s0,$v0 #Store first number into $s0

    #Prompt for second number (B)
    li  $v0,4
    la  $a0,getB
    syscall

    #Read in second number.
    li  $v0,5
    syscall
    move    $s1,$v0 #Store second number into $s1


    jal Multiply #Copies the address of the next instruction and then jumps to the address label.
    j   print #So we will copy the address to jump to 'print' and then we will jump to 'Multiply'

Multiply:
    move $s3, $0        # lw product
    move $s4, $0        # hw product
    
    beq $s1, $0, done   #Exit the program if either of the numbers are 0.
    beq $s0, $0, done

    move $s2, $0        # extend multiplicand

loop:
    andi $t0, $s0, 1    # Test least significant bit
    beq $t0, $0, next   # Skip if zero
    addu $s3, $s3, $s1  # lw(product) += lw(multiplicand)
    sltu $t0, $s3, $s1  # catch carry-out(0 or 1)
    addu $s4, $s4, $t0  # hw(product) += carry
    addu $s4, $s4, $s2  # hw(product) += hw(multiplicand)
next:
    # shift multiplicand left
    srl $t0, $s1, 31    # copy bit from lw to hw
    sll $s1, $s1, 1
    sll $s2, $s2, 1
    addu $s2, $s2, $t0

    srl $s0, $s0, 1     # shift multiplier right
    bne $s0, $0, loop

done:
    jr $ra #Go to print.

print:
    # print result string
    li  $v0,4
    la  $a0,result
    syscall             # print the string saying "The Result: "

    # print out the result
    li  $v0,1
    move    $a0,$s4
    syscall             # print out first result

    li  $v0,4
    la  $a0,space       # print a space
    syscall

    li  $v0,1
    move    $a0,$s3
    syscall             # print out second result



    # Exit the program.
    li  $v0,10
    syscall
